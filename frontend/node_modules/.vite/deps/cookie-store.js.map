{
  "version": 3,
  "sources": ["../../../../node_modules/cookie-store/index.js"],
  "sourcesContent": ["/*!\n  * Cookie-store v3.0.0\n  * https://github.com/mkay581/cookie-store\n  *\n  * Copyright (c) 2020 Mark Kennedy\n  * Licensed under the MIT license\n */\n\n\"use strict\";\n/**\n * Module variables.\n * @private\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\nvar pairSplitRegExp = /; */;\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n// eslint-disable-next-line no-control-regex\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\nfunction tryDecode(str, decode) {\n    try {\n        return typeof decode === 'boolean' ? decodeURIComponent(str) : decode(str);\n    }\n    catch (e) {\n        return str;\n    }\n}\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @private\n */\nfunction parse(str, options) {\n    if (options === void 0) { options = {}; }\n    if (typeof str !== 'string') {\n        throw new TypeError('argument str must be a string');\n    }\n    var obj = [];\n    var opt = options || {};\n    var pairs = str.split(pairSplitRegExp);\n    var dec = opt.decode || decode;\n    for (var i = 0; i < pairs.length; i++) {\n        var pair = pairs[i];\n        var eqIdx = pair.indexOf('=');\n        // skip things that don't look like key=value\n        if (eqIdx < 0) {\n            continue;\n        }\n        var key = pair.substr(0, eqIdx).trim();\n        var val = pair.substr(++eqIdx, pair.length).trim();\n        // quoted values\n        if ('\"' == val[0]) {\n            val = val.slice(1, -1);\n        }\n        // only assign once\n        if (undefined == obj[key]) {\n            obj.push({\n                name: key,\n                value: tryDecode(val, dec),\n            });\n        }\n    }\n    return obj;\n}\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @private\n */\nfunction serialize(name, val, options) {\n    if (options === void 0) { options = {}; }\n    var opt = options || {};\n    var enc = opt.encode || encode;\n    if (typeof enc !== 'function') {\n        throw new TypeError('option encode is invalid');\n    }\n    if (!fieldContentRegExp.test(name)) {\n        throw new TypeError('argument name is invalid');\n    }\n    var value = enc(val);\n    if (value && !fieldContentRegExp.test(value)) {\n        throw new TypeError('argument val is invalid');\n    }\n    var str = name + '=' + value;\n    if (null != opt.maxAge) {\n        var maxAge = opt.maxAge - 0;\n        if (isNaN(maxAge))\n            throw new Error('maxAge should be a Number');\n        str += '; Max-Age=' + Math.floor(maxAge);\n    }\n    if (opt.domain) {\n        if (!fieldContentRegExp.test(opt.domain)) {\n            throw new TypeError('option domain is invalid');\n        }\n        str += '; Domain=' + opt.domain;\n    }\n    if (opt.path) {\n        if (!fieldContentRegExp.test(opt.path)) {\n            throw new TypeError('option path is invalid');\n        }\n        str += '; Path=' + opt.path;\n    }\n    if (opt.expires) {\n        if (typeof opt.expires.toUTCString !== 'function') {\n            throw new TypeError('option expires is invalid');\n        }\n        str += '; Expires=' + opt.expires.toUTCString();\n    }\n    if (opt.httpOnly) {\n        str += '; HttpOnly';\n    }\n    if (opt.secure) {\n        str += '; Secure';\n    }\n    if (opt.sameSite) {\n        var sameSite = typeof opt.sameSite === 'string'\n            ? opt.sameSite.toLowerCase()\n            : opt.sameSite;\n        switch (sameSite) {\n            case true:\n                str += '; SameSite=Strict';\n                break;\n            case 'lax':\n                str += '; SameSite=Lax';\n                break;\n            case 'strict':\n                str += '; SameSite=Strict';\n                break;\n            case 'none':\n                str += '; SameSite=None';\n                break;\n            default:\n                throw new TypeError('option sameSite is invalid');\n        }\n    }\n    return str;\n}\nfunction sanitizeOptions(arg) {\n    if (!arg) {\n        return {};\n    }\n    if (typeof arg === 'string') {\n        return { name: arg };\n    }\n    return arg;\n}\nvar CookieStore = {\n    /**\n     * Get a cookie.\n     *\n     * @param {string} name\n     * @return {Promise}\n     */\n    get: function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var name;\n            return __generator(this, function (_a) {\n                name = sanitizeOptions(options).name;\n                return [2 /*return*/, parse(document.cookie).find(function (cookie) { return cookie.name === name; })];\n            });\n        });\n    },\n    /**\n     * Set a cookie.\n     *\n     * @param {string} name\n     * @param {string} value\n     * @return {Promise}\n     */\n    set: function (name, value) {\n        return new Promise(function (resolve, reject) {\n            try {\n                var cookieString = serialize(name, value);\n                document.cookie = cookieString;\n                resolve();\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    },\n    /**\n     * Get multiple cookies.\n     */\n    getAll: function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var name, cookie;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        name = sanitizeOptions(options).name;\n                        if (!name) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.get(name)];\n                    case 1:\n                        cookie = _a.sent();\n                        return [2 /*return*/, [cookie]];\n                    case 2: return [2 /*return*/, parse(document.cookie)];\n                }\n            });\n        });\n    },\n    /**\n     * Remove a cookie.\n     *\n     * @param {String} name\n     * @return {Promise}\n     */\n    delete: function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, name, domain, value, serializedValue;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = sanitizeOptions(options), name = _a.name, domain = _a.domain;\n                        return [4 /*yield*/, this.get(name)];\n                    case 1:\n                        value = (_b.sent()).value;\n                        serializedValue = serialize(name, value, {\n                            maxAge: 0,\n                            domain: domain,\n                        });\n                        document.cookie = serializedValue;\n                        return [2 /*return*/, Promise.resolve()];\n                }\n            });\n        });\n    },\n};\nif (!window.cookieStore) {\n    window.cookieStore = CookieStore;\n}\n"],
  "mappings": "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",
  "names": ["decode"]
}
